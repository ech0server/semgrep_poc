pipeline {
  agent {
    docker {
      // Make sure you have the latest semgrep-agent
      // This file is tested with semgrep 0.39.1 on Python 3.9.1
      // For the latest agent, use 'docker pull returntocorp/semgrep-agent:v1'
      image 'returntocorp/semgrep-agent:v1'
      args '-u root'
    }
  }

    stages {
        stage('Code Checkout'){
            steps{
                script{
                    scmVars = checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/ech0server/semgrep_poc.git']]])
                    env.GIT_BRANCH = scmVars.GIT_BRANCH
                    env.GIT_COMMIT = scmVars.GIT_COMMIT
                    env.GIT_URL = scmVars.GIT_URL
                }
            }
        }
        stage('Semgrep Agent') {
            steps{
                sh "echo 'test'"
                script{
                    // secrets for Semgrep org ID and auth token
                    env.SEMGREP_APP_TOKEN     = credentials('SEMGREP_APP_TOKEN')
                    env.SEMGREP_DEPLOYMENT_ID = credentials('SEMGREP_DEPLOYMENT_ID')
                    env.SEMGREP_REPO_URL = env.GIT_URL.replaceFirst(/^(.*).git$/,'$1')
                    env.SEMGREP_BRANCH = "${env.GIT_BRANCH}"
                    env.SEMGREP_JOB_URL = "${env.BUILD_URL}"
                    env.SEMGREP_REPO_NAME = env.GIT_URL.replaceFirst(/^https:\/\/github.com\/(.*).git$/, '$1')
                    echo "Configuration: "
                    echo "${env.SEMGREP_APP_TOKEN}"
                    echo "${env.SEMGREP_DEPLOYMENT_ID}"
                    echo "${env.SEMGREP_REPO_URL}"
                    echo "${env.SEMGREP_BRANCH}"
                    echo "${env.SEMGREP_JOB_URL}"
                    echo "${env.SEMGREP_REPO_NAME}"
                    // sh 'python -m semgrep_agent --publish-token $SEMGREP_APP_TOKEN --publish-deployment $SEMGREP_DEPLOYMENT_ID'
                }
            }
        }
    }
}
